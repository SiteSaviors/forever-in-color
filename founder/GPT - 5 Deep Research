Wondertone — Canvas in Room Preview

Condensed Research Pack (≤500 lines)

0) TL;DR (Ship-Now Plan)

Default background: Light/white modern room (very light grey wall #F4F5F7).

Frames: black, white, none (all supported visually on light room).

Assets for V1: 6 images = (portrait/square/landscape) × (frame on/off).

Placement: Below main preview in StudioConfigurator.

Transitions: Crossfade backgrounds; scale overlay on size change; placeholder → styled crossfade.

Mobile: Hide for V1 (hidden sm:block). Consider AR button in V2.

State: Move selectedCanvasSize to Zustand; subscribe via selectors to avoid prop drilling.

1) Executive Summary

Goal: Reduce purchase anxiety at the decision moment by helping users visualize art at home.
Hypothesis: In-room context + clear frame/size feedback → ↑ Add-to-Cart, ↑ size upgrades, ↑ frame attach rate.

V1 Scope

One room style (light).

6 background images (orientation × frame on/off).

Smooth transitions, responsive desktop layout.

Subtle size scaling (visual cue, not physical accuracy).

Accessibility: reduced motion, readable badges, ARIA label.

Why this path

Fastest premium output: Stock+Photoshop compositing is cheap, quick, and controllable.

Zustand-first state: Single source of truth and minimal re-renders.

Clear upgrade hooks: Seeing framed vs unframed in room boosts attachment.

Risks

Asset realism variance → mitigate with QA checklist.

Rapid toggling → guard with transition state, cancel/finalize semantics.

Mobile UX deferred → acceptable tradeoff for velocity.

2) Technical Implementation Plan
2.1 State (Zustand additions)
// useFounderStore.ts
type CanvasSize = '8x10' | '12x16' | '16x20' | '20x24';
type Orientation = 'vertical' | 'square' | 'horizontal';
type Frame = 'black' | 'white' | 'none';

const sizeOptions: { id: CanvasSize; label: string; price: number }[] = [
  { id: '8x10',  label: '8×10',  price: 69 },
  { id: '12x16', label: '12×16', price: 89 },
  { id: '16x20', label: '16×20', price: 129 },
  { id: '20x24', label: '20×24', price: 169 },
];

type FounderState = {
  // existing…
  orientation: Orientation;
  enhancements: { frame: Frame; /* … */ };

  selectedCanvasSize: CanvasSize;
  setCanvasSize: (size: CanvasSize) => void;

  // UI flags to stabilize transitions
  orientationChanging: boolean;
  setOrientationChanging: (b: boolean) => void;
};

export const useFounderStore = create<FounderState>((set, get) => ({
  // existing…
  selectedCanvasSize: '12x16',
  setCanvasSize: (size) => set((state) => {
    const opt = sizeOptions.find(o => o.id === size);
    return { selectedCanvasSize: size, basePrice: opt ? opt.price : state.basePrice };
  }),
  orientationChanging: false,
  setOrientationChanging: (b) => set({ orientationChanging: b }),
}));

2.2 StickyOrderRail (local → global)
// BEFORE
// const [selectedSize, setSelectedSize] = useState<...>('12x16');

// AFTER
const selectedSize  = useFounderStore(s => s.selectedCanvasSize);
const setCanvasSize = useFounderStore(s => s.setCanvasSize);

// usage
<button onClick={() => setCanvasSize(size.id)} aria-pressed={selectedSize===size.id}>
  {size.label}
</button>

2.3 StudioConfigurator insertion
// StudioConfigurator.tsx — add below MainCanvas
<div className="w-full max-w-2xl mt-8 hidden sm:block">
  <CanvasInRoomPreview />
</div>

2.4 CanvasInRoomPreview (store subscriptions, no prop drilling)
// CanvasInRoomPreview.tsx (essentials)
const orientation   = useFounderStore(s => s.orientation);
const frame         = useFounderStore(s => s.enhancements.frame);
const size          = useFounderStore(s => s.selectedCanvasSize);
const changing      = useFounderStore(s => s.orientationChanging);
const styledUrl     = useFounderStore(s => s.currentStyle?.previewUrl); // or selector
const croppedUrl    = useFounderStore(s => s.crops[orientation]?.url);

// Background rule
const bgSrc = `/room-preview/modern-${orientation}-${frame==='none'?'noframe':'frame'}.jpg`;

// Scale hint (subtle visual cue)
const scaleMap = { '8x10': 0.70, '12x16': 0.85, '16x20': 1.00, '20x24': 1.10 };
const scale = scaleMap[size];

// Crossfade layers: bg, placeholder (cropped), styled

2.5 Transition choreography (code sketch)
// Orientation change guard (where orientation is set)
setOrientationChanging(true);
// …trigger crop/regeneration
// in preview component: when new bg + new image both loaded:
setOrientationChanging(false);

/* Tailwind ideas */
.overlay { @apply transform-gpu will-change-transform will-change-opacity; }
.fade-enter { opacity: 0; }
.fade-enter-active { transition: opacity 300ms; opacity: 1; }
.scale-size { transition: transform 300ms; transform: scale(var(--scale)); }

3) UX Flow & State Machines
3.1 Component-level state machine
stateDiagram-v2
  [*] --> Idle
  Idle --> Transitioning: Orientation or Frame toggled
  Transitioning --> Idle: New background visible
  Idle --> Loading: Style (re)generation started
  Loading --> Idle: Styled preview ready

3.2 User scenarios

A) Orientation change

Freeze old layer, set orientationChanging=true.

Preload new bg → crossfade.

Show croppedUrl immediately as placeholder.

When styledUrl ready → crossfade placeholder → styled.

orientationChanging=false.

B) Size change

Price updates; animate overlay scale() 250–350ms; no bg swap.

C) Frame toggle

Crossfade bg *-frame ↔ *-noframe; keep overlay/image unchanged.

D) Rapid spam

Cancel in-flight transitions by last-write-wins + orientationChanging guard; disable controls during critical 300–500ms windows.

Optional: debounce orientation changes at 120–180ms.

4) Asset Production Strategy (V1)
4.1 Method decision

Stock Photo + Photoshop compositing (fast, cheap, controllable).

AI for concepting only; Blender deferred (steeper ramp, not needed for V1 realism).

4.2 Deliverables (V1 = 6 files)
/public/room-preview/
  modern-vertical-frame.jpg
  modern-vertical-noframe.jpg
  modern-square-frame.jpg
  modern-square-noframe.jpg
  modern-horizontal-frame.jpg
  modern-horizontal-noframe.jpg


Long edge 1200–1800px; JPEG/WebP q≈80; 120–200KB each.

Identical overlay coordinates across frame/no-frame per orientation: {top%, left%, width%, height%}.

4.3 Photoshop checklist

Wall tint to #F4F5F7.

Canvas plane: rectangle with slight bevel and soft contact shadow (18–24px blur, 6–10px offset, 20–30% opacity).

Frame variant: add black/white floating-frame rail; maintain same inner art area.

Desaturate bright props (e.g., lamp) by ~20–30% to reduce competition.

4.4 Time & budget (6 images)

Sourcing: 4–6h; Editing: 6–8h; Polish: 2–4h → ~1–2 days hands-on.

Cost: <$100 (stock + optional mockup PSDs).

5) Performance & Technical Constraints

Image strategy

Preload six bgs on studio mount (new Image().src = …).

Prefer WebP with automatic JPEG fallback.

Keep total <1MB.

Transition performance

Use opacity + transform (GPU paths); add will-change.

Limit concurrent transitions to two layers; disable shimmer on low-end.

State update cascades

Selectors per prop to reduce re-renders; shallow equality.

React.memo on CanvasInRoomPreview; compute CSS vars via useMemo.

Mobile

Hide preview V1; show AR CTA later.

If showing: no hover effects, simpler transitions.

6) Competitive Research (compressed)
6.1 Direct competitors (canvas/photo print)
Site	In-room preview	Size handling	Frame handling	Loading UX	Mobile
Shutterfly	Mostly flat product	Badge only	Swatches	Spinners/skeletal	Full flow
CanvasPop	Flat mockups	Badge only	Visual swatch	Skeleton + fades	Full
Mixtiles	In-room for tiles	Scales context	Simple frame choice	Smooth fades	Strong
Nations Photo Lab	Flat product	Badge	Swatches	Basic	Full
Printique	Flat product	Badge	Swatches	Basic	Full

Gaps to exploit: Always-visible realistic room preview; smooth crossfades; frame visualization that matches the cart.

6.2 Leaders (furniture/marketplaces)
Site	Pattern to “steal”
Wayfair	Immediate feedback + subtle crossfades; clear scale via couch context
Amazon AR	One-tap view in room; tight loading states; last-write-wins model
IKEA Place	Context anchoring; realistic lighting; strong mobile-first flow
Houzz	Clean transitions; photo-real composites

Best practices to adopt

Default to realistic context with scale anchors (sofa/shelf).

Skeletons over spinners; keep swaps under ~300–500ms.

Clear size/frame deltas communicated visually.

7) Future-Proofing & Roadmap

V1.5

Subtle dimension badge (“16×20”) overlay; export social image (client canvas composite).

Optional dark room auto-pick for bright art with white/no frame (luminance ≥58).

V2

Multiple room styles (selectedRoomStyle enum) + CMS-able manifest.

Frame variants as separate PNG overlays (reduce bg combinatorics).

Mobile AR (“View in your room”); export 3D model/USdz with art texture.

Custom room upload + perspective fit (homography-based).

APIs/Types (future-ready)

type RoomStyle = 'modern' | 'warm' | 'gallery'; // later
type FrameStyle = 'black' | 'white' | 'walnut' | 'gold' | 'none';

type RoomAsset = {
  style: RoomStyle; orientation: Orientation; frameVariant: 'frame'|'noframe';
  src: string;
  artRectPct: { top: number; left: number; width: number; height: number };
};


Folder strategy

/public/room-preview/{style}/{orientation}-{frameVariant}.jpg
manifest.json // maps to artRectPct per asset

8) Accessibility & Inclusive Design

Respect prefers-reduced-motion: disable shimmer/long fades.

High-contrast badge (white text on 60%+ black) and ≥4.5:1 contrast.

aria-label: “In-room preview, {orientation}, {size}, {frame}.”

Keyboard focus preserved on control click; visible focus ring.

Avoid critical info in color only; maintain text labels.

9) Creative Brief (for photographer/retoucher or stock selection)

Art direction

Room: Contemporary, uncluttered; light neutral wall.

Camera: 50mm equivalent; eye-level; straight-on (minimal perspective).

Lighting: Soft single-direction key; gentle wall falloff.

Composition: Canvas centered or rule-of-thirds with sofa edge in frame.

Color grading: Neutral, slightly warm; avoid HDR/over-contrast.

Deliver

3 orientations; duplicate with/without frame rail.

Provide artRectPct for each image.

If DIY compositing

Use soft wall shadow; keep inner art area identical across frame/no-frame.

Add 1–2px inner line for white frame.

Export WebP and JPEG.

10) Conversion & Measurement

Primary metrics

Add-to-cart rate.

Size upgrade % (12×16 → 16×20/20×24).

Frame attach rate.

Time-in-studio (engagement proxy).

Desktop vs mobile conversion delta.

A/B ideas

With vs without room preview.

Size scaling on vs off.

Frame default = none vs black (expect black shows higher attach).

11) Implementation Checklist (copy & run)

 Add selectedCanvasSize, setCanvasSize, and transition flags to Zustand.

 Migrate size from StickyOrderRail local → global (selectors).

 Insert <CanvasInRoomPreview /> under main preview; hide on mobile.

 Preload 6 backgrounds; memoize component; use shallow selectors.

 Implement bg crossfades; overlay scale on size; placeholder → styled crossfade.

 Produce 6 assets + document artRectPct; compress to <1MB total.

 QA on mid-range laptop & iPhone/Pixel: 60fps, no jank, crisp edges.

 Add analytics events (size change, frame toggle, orientation change, add-to-cart).

 Optional: feature-flag for staged rollout.

12) Minimal CSS/JS Snippets

Scale mapping

const scaleMap: Record<CanvasSize, number> = {
  '8x10': 0.70, '12x16': 0.85, '16x20': 1.00, '20x24': 1.10
};


Frame-aware edge/shadow

const baseShadow = '0 8px 24px rgba(0,0,0,.18),0 2px 8px rgba(0,0,0,.12)';
const frameStyles = {
  black:  { boxShadow: baseShadow },
  white:  { boxShadow: `${baseShadow}, inset 0 0 0 1px rgba(0,0,0,.06)` },
  none:   { boxShadow: `${baseShadow}, 0 0 0 1px rgba(0,0,0,.05)` }
};


Background pick (V1 simple)

const bgSrc = `/room-preview/modern-${orientation}-${frame==='none' ? 'noframe' : 'frame'}.jpg`;

13) Optional: Luminance-based BG (V1.5)
function pickBgByLuminance(avgL: number, frame: Frame) {
  if ((frame === 'white' || frame === 'none') && avgL >= 58) return 'dark';
  return 'light';
}

14) Edge Cases & Mitigations

Preview not ready: Show cropped placeholder; keep badge visible.

Image load fail: Fallback to light room *-noframe and error toast (non-blocking).

Spam toggles: Disable controls during 300–500ms transitions (orientationChanging).

Very dark/very bright art: Ensure shadow/inner line keeps edges legible.

Safari/WebP: Add JPEG fallback via <picture>.

15) Final Recommendation

Ship V1 with one polished light room, six assets, and smooth transitions. This hits the conversion problem directly with minimal engineering risk and leaves clean hooks for V1.5 (dimension badge/export) and V2 (multi-room, AR, custom room upload).